name: Build image and push to AWS ECR

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push container image to aws ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
        ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        ANYPOINT_ORG_ID: ${{ secrets.ANYPOINT_ORG_ID }}
        ANYPOINT_ENV: ${{ vars.ANYPOINT_ENV }}
        AWS_ECR_REPOSITORY_NAME: ${{ vars.AWS_ECR_REPOSITORY_NAME }}
        AWS_ECR_IMAGE_TAG: ${{ vars.AWS_ECR_IMAGE_TAG }}
        AWS_REGION: ${{ vars.AWS_REGION }}
        AWS_SNS_TOPIC_ARN: ${{ vars.AWS_SNS_TOPIC_ARN }}
      run: |
        docker build --no-cache -t $ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME:$AWS_ECR_IMAGE_TAG --build-arg AWS_ACCESS_KEY=$AWS_ACCESS_KEY --build-arg AWS_SECRET_KEY=$AWS_SECRET_KEY --build-arg ANYPOINT_CLIENT_ID=$ANYPOINT_CLIENT_ID --build-arg ANYPOINT_CLIENT_SECRET=$ANYPOINT_CLIENT_SECRET --build-arg ANYPOINT_ORG_ID=$ANYPOINT_ORG_ID --build-arg ANYPOINT_ENV=$ANYPOINT_ENV --build-arg AWS_REGION=$AWS_REGION --build-arg AWS_SNS_TOPIC_ARN=$AWS_SNS_TOPIC_ARN .
        docker push -a $ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME